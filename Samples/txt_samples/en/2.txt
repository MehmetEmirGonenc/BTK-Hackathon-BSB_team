Linear and Non-linear Structures 
Non-primitive data structures can further be classified into two categories: linear and non-linear data structures. 
If the elements of a data structure are stored in a linear or sequential order, then it is a linear data structure. 
Examples include arrays, linked lists, stacks, and queues.
Linear data structures can be represented in memory in two different ways. 
One way is to have to a linear relationship between elements by means of sequential memory locations. 
The other way is to have a linear relationship between elements by means of links.
However, if the elements of a data structure are not stored in a sequential order, then it is a non-linear data structure. 
The relationship of adjacency is not maintained between elements of a non-linear data structure. 
Examples include trees and graphs.  C supports a variety of data structures. 
We will now introduce all these data structures and they would be discussed in detail in subsequent chapters.
Arrays 
An array is a collection of similar data elements. 
These data elements have the same data type. 
The elements of the array are stored in consecutive memory locations and are referenced by an index (also known as the subscript). 
In C, arrays are declared using the following syntax: type name[size];
For example, int marks[10]; The above statement declares an array marks that contains 10 elements. 
In C, the array index starts from zero. 
This means that the array marks will contain 10 elements in all. 
The first element will be stored in marks[0], second element in marks[1], so on and so forth. 
Therefore, the last element, that is the 10th element, will be stored in marks[9]. In the memory, the array will be stored as shown in Fig. 2.1.